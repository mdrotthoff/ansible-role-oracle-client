---

- name: Check whether Oracle Home Exists
  stat:
    path: "{{ oracle_client_oracle_home }}"
  register: __oracle_client_oracle_home

- name: Check whether Oracle Inventory Exists
  stat:
    path: "{{ oracle_client_inventory_location }}"
  register: __oracle_client_inventory_location

- name: Set Whether Oracle Client is Already Installed
  set_fact:
    __oracle_client_installed: "{{ __oracle_client_oracle_home.stat.exists and __oracle_client_inventory_location.stat.exists }}"

- name: Create Base App Directory
  file:
    path: "{{ oracle_client_oracle_app_base }}"
    state: directory
    owner: "{{ __oracle_client_user }}"
    group: "{{ __oracle_client_group }}"
  when:
    - not __oracle_client_installed

- name: Create Base Directory
  file:
    path: "{{ oracle_client_oracle_base }}"
    state: directory
    owner: "{{ __oracle_client_user }}"
    group: "{{ __oracle_client_group }}"
  when:
    - not __oracle_client_installed

- name: Create Storage Directory
  file:
    path: "{{ oracle_client_tmp_install_storage }}"
    state: directory
    owner: "{{ __oracle_client_user }}"
    group: "{{ __oracle_client_group }}"
  when:
    - not __oracle_client_installed
  ignore_errors: "{{ ansible_check_mode }}"

- name: Unpack Oracle Client At New Location
  unarchive:
    src: "{{ oracle_client_zip }}"
    dest: "{{ oracle_client_tmp_install_storage }}"
    owner: "{{ __oracle_client_user }}"
    group: "{{ __oracle_client_group }}"
  when:
    - not ansible_check_mode
    - not __oracle_client_installed
  ignore_errors: "{{ ansible_check_mode }}"

- name: Transfer the response file
  template:
    dest: "{{ oracle_client_tmp_install_storage}}/client.rsp"
    src: client.rsp.j2
  when:
    - not ansible_check_mode
    - not __oracle_client_installed

- name: Install Oracle Client
  block:
    - name: Run the installer
      become: yes
      become_user: "{{ __oracle_client_user }}"
      command: "{{ oracle_client_tmp_install_storage }}/client/runInstaller -silent -noconfig -waitForCompletion -responseFile {{ oracle_client_tmp_install_storage }}/client.rsp"
      register: __oracle_client_installer_result
      when:
        - not ansible_check_mode
        - not __oracle_client_installed
      ignore_errors: "{{ ansible_check_mode }}"

  rescue:
    - name: Fail if the exit code is not an acceptable value
      fail:
        msg: "Oracle installed exited with code {{ __oracle_client_installer_result.rc }}"
      when:  __oracle_client_installer_result.rc not in [0, 6]

  always:
    - name: Display the result of the Oracle client install
      debug:
        var: __oracle_client_installer_result
      when:
        - __oracle_client_installer_result is defined
        - __oracle_client_installer_result.rc is defined
        - __oracle_client_installer_result.rc > 0

- name: Check if OraInventoryRoot Script needs to be run
  stat:
    path: "{{ oracle_client_inventory_location }}/orainstRoot.sh"
  register: __oracle_client_orainst_path
  when:
    - not __oracle_client_installed

- name: Run root orainst scripts
  command: "{{ oracle_client_inventory_location }}/orainstRoot.sh"
  register: __oracle_client_orainstRoot
  when:
    - not __oracle_client_installed
    - __oracle_client_orainst_path.stat.exists

- name: Check If Oracle Home Root Script Needs to be Run
  stat:
    path: "{{ oracle_client_oracle_home }}/root.sh"
  register: __oracle_client_root_shell_path
  when:
    - not __oracle_client_installed

- name: Run root configuration
  command: "{{ oracle_client_oracle_home }}/root.sh"
  register: __oracle_client_install_rootShell
  when:
    - not __oracle_client_installed
    - __oracle_client_root_shell_path.stat.exists

- name: Remove Temporary Storage Directory
  file:
    path: "{{ oracle_client_tmp_install_storage }}"
    state: directory
  when:
    - not __oracle_client_installed
